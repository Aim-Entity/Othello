<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZbsZAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>This version of ONeillo game is developed by Bilal Uddin from the University Of Sheffield Hallam. To start a game, click on the start game button on screen. Loading a game is only enabled when there if there is a save file. You cannot load into a blank save. For more on the rules of ONiello, look up the online rule book from Othello's official website</value>
  </data>
</root>